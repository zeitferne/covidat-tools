name: Update covidat-data
on:
  workflow_dispatch:
    inputs:
      force-notebook-update:
        type: boolean
  schedule:
    - cron: "24 17,3 * * *" # 19:24, 5:24 CEST, 18:24, 4:24 CET
    # On Tuesdays, do an additional run at 10:8 UTC (12:08 CET, for sari)
    - cron: "8 11 * * 2"
permissions:
  contents: write
defaults:
  run:
    shell: bash
jobs:
  update:
    name: "Update covidat-data and re-generate notebooks on changes"
    concurrency: update-data
    runs-on: ubuntu-latest
    env:
      COVDATA_REPO_ROOT: ${{github.workspace}}/covidat-data
      COVAT_DATA_ROOT: ${{github.workspace}}/covidat-data/data
      COVAT_COLLECT_ROOT: ${{github.workspace}}/tmpdata
      REV_PATH: "export/data-rev.txt"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Setup git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Load old data
        uses: actions/checkout@v4
        with:
          repository: "zeitferne/covidat-data"
          path: ${{ env.COVDATA_REPO_ROOT }}
          token: ${{ secrets.COVAT_DATA_GH_TOKEN }}
          ref: "unreviewed-auto-update"
          fetch-depth: 16 # We run git diff to compare old index later
      - name: Fetch new data
        id: fetch
        if: ${{ !inputs.force-notebook-update }}
        env:
          COVAT_BOT_FROM_EMAIL: ${{ secrets.COVAT_BOT_FROM_EMAIL }}
        run: |
          echo "date=`date --rfc-email`" | tee -a "$GITHUB_OUTPUT"
          PYTHONPATH=src python -m covidat.dldata --loglevel=debug -c dldata.toml
      - name: Upload new data
        id: upload
        if: ${{ steps.fetch.outcome == 'success' }}
        working-directory: ${{ env.COVAT_DATA_ROOT }}
        run: |
          git add -A .
          if ! git diff-index --quiet HEAD; then
              git commit -m "Automatic data update ${{steps.fetch.outputs.date}}"
              git push
              echo "updated=1" >> "$GITHUB_OUTPUT"
          fi
      - name: checkout gh-pages
        id: checkout-pages
        if: ${{ inputs.force-notebook-update || steps.upload.outputs.updated }}
        uses: actions/checkout@v4
        with:
          path: notebooks/gh-pages
          ref: gh-pages
          sparse-checkout: export/data-rev.txt
          sparse-checkout-cone-mode: false
      - name: Check data update
        if: ${{ steps.checkout-pages.outcome == 'success' }}
        id: prepareupdate
        env:
          FORCE_UPDATE: ${{ inputs.force-notebook-update }}
        run: |
          LAST_REV=`cat "notebooks/gh-pages/$REV_PATH"`
          echo "Previous revision: $LAST_REV"

          cd "$COVDATA_REPO_ROOT"

          if [[ "$FORCE_UPDATE" = true ]] || ! git diff --quiet "$LAST_REV" -- \
               'data/basg-medicineshortage/*_latest.*' \
               'data/covid/abwassermonitoring/*_latest.*' \
               'data/covid/ages-varianten/Varianten_2*.csv' \
               'data/sozialversicherung-monatsberichte/Mb_*' \
               'data/statat-weekly-deaths/*_latest.*' \
               'data/sari/*_latest.*' \
               ':^data/covid/abwassermonitoring/tirol/**'
          then
            echo "updated=1" >> "$GITHUB_OUTPUT"
          fi
      - name: Re-generate pages
        if: steps.prepareupdate.outputs.updated
        env:
          GITHUB_SERVER_URL: ${{ github.server_url }}
        run: |
          sudo locale-gen de_AT.UTF-8
          sudo update-locale

          export TOOLS_DATE=`git log -1 --format="%aD"`

          python -m pip install -U pip
          pip install hatch
          hatch -v -e notebooks run sh -exc \
            'collectshortage && collecthydro && python -m covidat.collectsvat'


          cd "$COVDATA_REPO_ROOT"
          export COVDATA_COMMIT=`git rev-parse HEAD`
          export COVDATA_DATE=`git log -1 --format="%aD"`

          cd "$GITHUB_WORKSPACE/notebooks/gh-pages"

          # Avoid "Matplotlib is building the font cache; this may take a moment."
          # appearing inside rendered output.
          hatch -v -e notebooks run python -c \
            'import matplotlib, matplotlib.pyplot; print(matplotlib.get_cachedir())'

          git sparse-checkout disable # We don't even want to read, but needed for writing
          hatch -v -e notebooks run sh -exc \
            "cd notebooks && python -m covidat.export --execute --notebook monitoring.ipynb"
          echo "$COVDATA_COMMIT" >"$REV_PATH"

          git add -A
          if ! git diff-index --quiet HEAD; then
            git commit --reset-author --amend -m "Automatic notebook update ${{steps.fetch.outputs.date || '(forced)'}}"
            git push --force-with-lease
          fi




